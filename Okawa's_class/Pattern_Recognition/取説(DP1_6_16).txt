・変えられるところ
MICHI:未知データ
KIJUN:基準となるデータ

※未知データ1つに対して基準データは3つ．
	すなわち1つのプログラムで4×3の最大12通りのマッチング結果が書ける


・構造体の中身
struct CepstData{
	データのサイズ
	データの名前
	町の名前
	15次元のケプストラムデータ
};

・min3	・・・三つの距離の中から最初のものを探す関数

・DP	・・・DPマッチングの中処理をする関数．肝は一番奥のnum0=〜の辺り．gの二次元配列に累計距離を記録し最後にreturnで返す


・main	・・・ファイルを開いて読み込む→上記の関数を使用→マッチング結果を出力→全部出力し終わったら集計結果を出力


Ex.変えられるのはDPの距離の重みの部分とmainのファイルの読み込み回数の節約等．