＊注意
＞プログラムを他の人に渡す場合には渡す前に古宮に確認をとってからお願いします。


＞関数は分解する前の状態で入力してください。
(x-1)*(x-2)*(x-3)	・・・〇
x*x*x-6*x*x+11*x-6	・・・×


・Q＆A的なもの
＞てかそもそも今回のレポートってなにすんのさ？
いろんな非線型方程式(1次方程式じゃない方程式とほぼ同義)に対し、
ニュートン法を用いて近似解を求めてみる。

＊基本要件(必須)
5種類以上の非線形方程式の近似解を求める。
その近似解の収束の様子を表すグラフ。(5種全てでなくても可)

＊EXTRA
割線法の実装(当方まだ未着手)


＞いろんな非線型方程式ってどう決めるの？
解が複数あるもの、解が求まらないものなどを扱うと良い


＞割線法って？
解が複数ある際に用いると良い手法。
初期値を自動設定する際に必要らしい。


＊ここからプログラムについて。

＞扱いたい関数どこに入れるの？
一番上のfunc(x)の後のかっこ内に入れてください。


＞float.hっている？
FLT_EPSILONを呼び出すために使用。
というかヘッダはいじらない方が賢明だと思う。


＞FLT_EPSILONって何？
double型の微小量。0に近いけど0じゃない数。
具体的には0.000000119209290...とかそんな感じ。


＞ほとんど答えが求まってるのに計算を続けちゃうんだけど？
解の許容誤差が小さすぎる可能性があります。
解の精度を変更してください。


＞解の精度を変えたいんだけど・・・？
一番上の方のEPSの後の数字(初期は0.000001)が許容量です。


＊実装されているものの解説
・近似解、各近似解の接線、接線のy切片の計算
近似解は関数func、各近似解の接線は関数dfで、接線のy切片は関数fbで計算。
またプログラム内ではそれぞれx、df1、bに代入。


・上記データのテキストファイルへの保存
do_while内にて
	char Name[] ="newton_data_x.txt";	//近似解
	char Namea[]="newton_data_a.txt";	//接線の傾き＝微分
	char Nameb[]="newton_data_b.txt";	//接線のy切片

の部分で保存する先を指定。
""の間を変えると保存するテキストファイル名を変更可能。
(.txtは拡張子なので変えない方がいい)


・各近似解のy切片を同時に求める
Excelでグラフを作るときに使いたい人向け。
別に使わなくてもいいと思うし、不要なら関数fbとbを消去してしまっても良い。
ただし、消すならすべて消すこと。中途半端に残すとエラーの原因になります。


・5点近似による導関数の算出
関数dfで計算。
近似解における傾きの求め方(微分)は５点近似。
前後の2点ずつで挟むようにして計算している。
計算量が多い分、3点近似より精度が高い。
もっと詳しく知りたい場合はググること。


・dfx=0の場合の0割り防止を実施
このプログラム内では、
[dfx] = [df(x)の返り値] = [df1]となっていている(do_while内の最初を参照)。
このdf1は、delta(近似解の差分)を計算する際に分母に来る。
よってdfx=0の場合は0割りが発生する可能性がある。
例えば、扱う関数がx*x-4の時に初期値-1を与えたときなど。
0割りが起きそうな時の実際の操作は、関数df内のelseの後に記述。


＊未解決の問題＊
1/xの時、初期値0または1で動作停止
近似解が0となり0割りとなる。
具体的には関数df内のdy計算時にエラー